version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.07.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.07.0-ce
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache jq
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker version
            docker build --build-arg ZONE_KEY=${ZONEKEY} --cache-from=app -t app .
      - run:
          name: Get Docker image size
          command: |
            mkdir /tmp/artifacts;
            docker images --format "{{.Size}}" app > /tmp/artifacts/size;
      - store_artifacts:
          path: /tmp/artifacts
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: Download samples
          command: |
            docker create -v /malware --name malvol alpine:3.8 /bin/true
            docker run --rm -it \
             --volumes-from malvol \
             malice/get-mauled download --password infected https://github.com/ytisf/theZoo/raw/master/malwares/Binaries/Duqu2/Duqu2.zip
      - run:
          name: Run tests
          command: |
            set -x
            docker run --rm --volumes-from malvol app -V 2796a119171328e91648a73d95eb297edc220e8768f4bbba5fb7237122a988fc | jq .
            docker run --rm --volumes-from malvol app -t 2796a119171328e91648a73d95eb297edc220e8768f4bbba5fb7237122a988fc
      - run:
          name: Run update test
          command: |
            set -x
            docker run --rm app -V update
